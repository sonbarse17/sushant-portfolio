---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="DevOps Workflow Automation | Sushant Sonbarse">
  <div class="bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-white min-h-screen">
    <div class="container mx-auto px-6 py-12">
      <div class="max-w-4xl mx-auto">
        <a href="/sushant-portfolio#projects" class="text-blue-500 hover:underline mb-8 block">&larr; Back to Projects</a>
        <h1 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white">DevOps Workflow Automation</h1>
        <p class="text-lg text-gray-600 dark:text-gray-400 mb-8">A visual guide to a modern, automated CI/CD pipeline for a microservices application.</p>

        <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-4 sm:p-8 border border-gray-200 dark:border-gray-700">
          <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">CI/CD Pipeline Diagram</h2>
          <div class="w-full overflow-x-auto">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1100 500" class="min-w-[1000px]">
              <defs>
                <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:1" />
                  <stop offset="100%" style="stop-color:#8b5cf6;stop-opacity:1" />
                </linearGradient>
                <style>
                  .label { font-family: 'Segoe UI', sans-serif; font-size: 14px; fill: #4b5563; }
                  .dark .label { fill: #d1d5db; }
                  .title { font-family: 'Segoe UI', sans-serif; font-size: 16px; font-weight: 600; fill: #1f2937; }
                  .dark .title { fill: #fff; }
                  .arrow { stroke: #9ca3af; stroke-width: 2; marker-end: url(#arrowhead); }
                  .dark .arrow { stroke: #6b7280; }
                  .box { rx: 8; ry: 8; stroke: #e5e7eb; stroke-width: 1; }
                  .dark .box { stroke: #4b5563; }
                </style>
                <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
                  <polygon points="0 0, 10 3.5, 0 7" fill="#9ca3af"/>
                </marker>
              </defs>

              <!-- Stages -->
              <g id="stage-plan">
                <rect x="20" y="20" width="150" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="95" y="50" text-anchor="middle" class="title">Plan</text>
                <text x="95" y="80" text-anchor="middle" class="label">Jira / Confluence</text>
              </g>

              <g id="stage-code">
                <rect x="20" y="150" width="150" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="95" y="180" text-anchor="middle" class="title">Code</text>
                <text x="95" y="210" text-anchor="middle" class="label">Git / VS Code</text>
              </g>
              
              <g id="stage-build">
                <rect x="220" y="85" width="150" height="230" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="295" y="115" text-anchor="middle" class="title">Build</text>
                <text x="295" y="150" text-anchor="middle" class="label">Jenkins / GitLab CI</text>
                <text x="295" y="180" text-anchor="middle" class="label">Maven / npm</text>
                <text x="295" y="210" text-anchor="middle" class="label">Docker Build</text>
                <text x="295" y="240" text-anchor="middle" class="label">Push to Artifactory</text>
              </g>

              <g id="stage-test">
                <rect x="420" y="150" width="150" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="495" y="180" text-anchor="middle" class="title">Test</text>
                <text x="495" y="210" text-anchor="middle" class="label">JUnit / Selenium</text>
              </g>

              <g id="stage-release">
                <rect x="620" y="150" width="150" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="695" y="180" text-anchor="middle" class="title">Release</text>
                <text x="695" y="210" text-anchor="middle" class="label">Terraform / Helm</text>
              </g>

              <g id="stage-deploy">
                <rect x="820" y="85" width="150" height="130" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="895" y="115" text-anchor="middle" class="title">Deploy</text>
                <text x="895" y="150" text-anchor="middle" class="label">Kubernetes (EKS)</text>
                <text x="895" y="180" text-anchor="middle" class="label">Blue/Green</text>
              </g>
              
              <g id="stage-operate">
                <rect x="820" y="250" width="150" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="895" y="280" text-anchor="middle" class="title">Operate</text>
                <text x="895" y="310" text-anchor="middle" class="label">AWS / Azure</text>
              </g>

              <g id="stage-monitor">
                <rect x="420" y="350" width="350" height="100" class="box" fill="#f3f4f6" class="dark:fill-[#1f2937]"/>
                <text x="595" y="380" text-anchor="middle" class="title">Monitor (Feedback Loop)</text>
                <text x="595" y="410" text-anchor="middle" class="label">Prometheus / Grafana / EFK</text>
              </g>

              <!-- Arrows -->
              <path d="M170,200 C195,200 195,150 220,150" fill="none" class="arrow" />
              <path d="M370,200 H 420" fill="none" class="arrow" />
              <path d="M570,200 H 620" fill="none" class="arrow" />
              <path d="M770,200 C795,200 795,150 820,150" fill="none" class="arrow" />
              <path d="M895,215 V 250" fill="none" class="arrow" />
              <path d="M770,400 H 420" fill="none" class="arrow" />
              <path d="M420,400 C 300,400 300,70 170,70" fill="none" class="arrow" />
            </svg>
          </div>
        </div>

        <div class="mt-12">
          <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">Workflow Breakdown</h2>
          <div class="space-y-8">
            <div class="p-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700">
              <h3 class="text-xl font-semibold mb-2 text-blue-600 dark:text-blue-400">1. Plan & Code</h3>
              <p class="text-gray-700 dark:text-gray-300">Development starts with planning in tools like Jira. Developers then write code locally using Git for version control. On every push to a feature branch, a webhook triggers the CI/CD pipeline.</p>
            </div>
            <div class="p-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700">
              <h3 class="text-xl font-semibold mb-2 text-blue-600 dark:text-blue-400">2. Build & Test</h3>
              <p class="text-gray-700 dark:text-gray-300">The pipeline, managed by Jenkins or GitLab CI, compiles the code, runs unit and integration tests, and builds a Docker image. The immutable image is then pushed to a container registry like Artifactory or Docker Hub.</p>
            </div>
            <div class="p-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700">
              <h3 class="text-xl font-semibold mb-2 text-blue-600 dark:text-blue-400">3. Release & Deploy</h3>
              <p class="text-gray-700 dark:text-gray-300">Infrastructure as Code (IaC) tools like Terraform provision the necessary cloud resources. Helm charts define the Kubernetes application, which is then deployed to a staging environment in Amazon EKS. After successful validation, a blue-green deployment strategy is used to release to production with zero downtime.</p>
            </div>
            <div class="p-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700">
              <h3 class="text-xl font-semibold mb-2 text-blue-600 dark:text-blue-400">4. Operate & Monitor</h3>
              <p class="text-gray-700 dark:text-gray-300">The live application is monitored using Prometheus for metrics, Grafana for visualization, and the EFK stack for logging. Alerts are configured to notify the team of any issues, creating a continuous feedback loop that informs the next planning cycle.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
