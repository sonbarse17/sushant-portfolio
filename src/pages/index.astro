---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import About from '../components/About.astro';
import Experience from '../components/Experience.astro';
import Skills from '../components/Skills.astro';
import Projects from '../components/Projects.astro';
import InteractiveDemo from '../components/InteractiveDemo.astro';
import Blog from '../components/Blog.astro';
import TechTimeline from '../components/TechTimeline.astro';
import Testimonials from '../components/Testimonials.astro';
import ToolComparisons from '../components/ToolComparisons.astro';
import SearchFilter from '../components/SearchFilter.astro';
import GitHub from '../components/GitHub.astro';
import LinkedIn from '../components/LinkedIn.astro';
import Contact from '../components/Contact.astro';
---

<Layout title="Sushant Sonbarse â€” DevOps Engineer">
  <Hero />
  <SearchFilter />
  <About />
  <Experience />
  <Skills />
  <Projects />
  <InteractiveDemo />
  <Blog />
  <TechTimeline />
  <Testimonials />
  <ToolComparisons />
  <GitHub />
  <LinkedIn />
  <Contact />
</Layout>

<style>
  /* Custom animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideUp {
    from { 
      opacity: 0; 
      transform: translateY(30px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }
  
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }
  
  .animate-slide-up {
    animation: slideUp 0.8s ease-out;
  }
  
  /* Intersection Observer animations */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }
  
  .animate-on-scroll.animate {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // Intersection Observer for scroll animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate');
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections
  document.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('section');
    sections.forEach(section => {
      section.classList.add('animate-on-scroll');
      observer.observe(section);
    });
  });
</script>