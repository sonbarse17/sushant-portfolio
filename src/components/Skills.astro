---
const skills = [
  {
    category: "Cloud & Infrastructure",
    items: [
      { name: "AWS", icon: "/sushant-portfolio/icons/aws.svg" },
      { name: "Azure", icon: "/sushant-portfolio/icons/azure.svg" },
      { name: "GCP", icon: "/sushant-portfolio/icons/gcp.svg" },
      { name: "Terraform", icon: "/sushant-portfolio/icons/terraform.svg" },
      { name: "Kubernetes", icon: "/sushant-portfolio/icons/kubernetes.svg" }
    ],
    icon: "‚òÅÔ∏è"
  },
  {
    category: "DevOps Tools",
    items: [
      { name: "Jenkins", icon: "/sushant-portfolio/icons/jenkins.svg" },
      { name: "GitLab CI", icon: "/sushant-portfolio/icons/gitlab.svg" },
      { name: "GitHub Actions", icon: "/sushant-portfolio/icons/github.svg" },
      { name: "Ansible", icon: "/sushant-portfolio/icons/ansible.svg" },
      { name: "Maven", icon: "/sushant-portfolio/icons/maven.svg" }
    ],
    icon: "üîß"
  },
  {
    category: "Containerization",
    items: [
      { name: "Docker", icon: "/sushant-portfolio/icons/docker.svg" },
      { name: "Helm", icon: "/sushant-portfolio/icons/helm.svg" }
    ],
    icon: "üì¶"
  },
  {
    category: "Monitoring",
    items: [
      { name: "Prometheus", icon: "/sushant-portfolio/icons/prometheus.svg" },
      { name: "Grafana", icon: "/sushant-portfolio/icons/grafana.svg" },
      { name: "Datadog", icon: "/sushant-portfolio/icons/datadog.svg" },
      { name: "EFK Stack", icon: "üìä" }
    ],
    icon: "üìä"
  },
  {
    category: "Scripting",
    items: [
      { name: "Bash", icon: "/sushant-portfolio/icons/bash.svg" },
      { name: "Python", icon: "/sushant-portfolio/icons/python.svg" }
    ],
    icon: "üíª"
  },
  {
    category: "Other",
    items: [
      { name: "Linux", icon: "/sushant-portfolio/icons/linux.svg" },
      { name: "Git", icon: "/sushant-portfolio/icons/git.svg" }
    ],
    icon: "‚öôÔ∏è"
  }
];
---

<section id="skills" class="py-20 bg-gradient-to-b from-gray-900 via-black to-gray-900 relative overflow-hidden">
  <!-- Background pattern -->
  <div class="absolute inset-0 bg-[linear-gradient(to_right,#1f2937_1px,transparent_1px),linear-gradient(to_bottom,#1f2937_1px,transparent_1px)] bg-[size:4rem_4rem] opacity-20"></div>
  <div class="container mx-auto px-4 sm:px-6 relative z-10">
    <div class="text-center mb-16 animate-slide-up">
      <h2 class="text-3xl sm:text-4xl font-bold mb-4 text-white">Skills & Technologies</h2>
      <p class="text-lg text-gray-300">Technologies I work with to build scalable solutions</p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8 max-w-6xl mx-auto">
      {skills.map((skill, index) => (
        <div 
          class="group relative bg-gradient-to-br from-gray-900/80 to-black/80 backdrop-blur-sm border border-gray-800/50 rounded-xl p-6 shadow-2xl hover:shadow-blue-500/10 transition-all duration-500 hover:-translate-y-3 hover:border-blue-500/30 animate-slide-up overflow-hidden"
          style={`animation-delay: ${index * 0.1}s`}
        >
          <!-- Glow effect -->
          <div class="absolute inset-0 bg-gradient-to-r from-blue-500/5 via-purple-500/5 to-pink-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl"></div>
          
          <div class="relative z-10">
            <div class="text-3xl mb-4 group-hover:scale-110 transition-transform duration-300">{skill.icon}</div>
            <h3 class="text-xl font-semibold mb-4 text-white group-hover:text-blue-400 transition-colors duration-300">{skill.category}</h3>
            <div class="flex flex-wrap gap-2">
            {skill.items.map((item) => (
              <span class="bg-gray-800/80 backdrop-blur-sm text-blue-300 px-3 py-1.5 rounded-full text-sm font-medium inline-flex items-center justify-center gap-2 border border-gray-700/50 hover:border-blue-500/50 hover:bg-blue-500/10 transition-all duration-300 min-h-[32px]">
                {typeof item === 'string' ? (
                  item
                ) : (
                  <>
                    {item.icon.endsWith('.svg') ? (
                      <img src={item.icon} alt={item.name} class="w-4 h-4 flex-shrink-0" />
                    ) : (
                      <span class="flex-shrink-0">{item.icon}</span>
                    )}
                    <span class="whitespace-nowrap">{item.name}</span>
                  </>
                )}
              </span>
            ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>