---
const projects = [
  {
    title: "End to End CI/CD Implementation",
    description: "Implemented an automated CI/CD pipeline for an e-commerce platform, reducing deployment time by 85%. Optimized Docker images, used Helm for Kubernetes deployments, and created Python automation scripts.",
    technologies: ["Jenkins", "Docker", "Kubernetes", "Helm", "Python"],
    link: "/sushant-portfolio/projects/cicd-implementation"
  },
  {
    title: "Three Tier Serverless Architecture",
    description: "Designed and deployed a scalable, serverless AWS architecture with EC2, VPC, Lambda, RDS, S3, CloudFront, and monitoring via the EFK stack.",
    technologies: ["AWS", "Lambda", "S3", "CloudFront", "EFK Stack"],
    link: "/sushant-portfolio/projects/serverless-architecture"
  },
  {
    title: "CRM Real Estate Microservices Deployment",
    description: "Deployed a CRM platform with 35 microservices using Angular, Spring Boot, Terraform, and AWS EKS. Cut release duration from 4 hours to 1 hour.",
    technologies: ["Angular", "Spring Boot", "Terraform", "AWS EKS"],
    link: "/sushant-portfolio/projects/crm-microservices"
  }
];
---

<section id="projects" class="py-20 transition-colors duration-300" :class="lightMode ? 'bg-white' : 'bg-black'">
  <div class="container mx-auto px-4 sm:px-6">
    <div class="text-center mb-16 animate-slide-up">
      <h2 class="text-3xl sm:text-4xl font-bold mb-4 transition-colors duration-300" :class="lightMode ? 'text-gray-900' : 'text-white'">Featured Projects</h2>
      <p class="text-lg transition-colors duration-300" :class="lightMode ? 'text-gray-600' : 'text-gray-300'">Real-world DevOps implementations and solutions</p>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6 sm:gap-8 max-w-7xl mx-auto">
      {projects.map((project, index) => (
        <div 
          class="group relative border rounded-xl sm:rounded-2xl p-6 sm:p-8 shadow-2xl hover:shadow-blue-500/10 transition-all duration-500 hover:-translate-y-3 animate-slide-up overflow-hidden" :class="lightMode ? 'bg-gradient-to-br from-white to-gray-50 border-gray-200 hover:border-blue-500/50' : 'bg-gradient-to-br from-gray-900 to-black border-gray-800 hover:border-blue-500/50'"
          style={`animation-delay: ${index * 0.2}s`}
        >
          <!-- Gradient overlay -->
          <div class="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl"></div>
          
          <!-- Content -->
          <div class="relative z-10">
            <!-- Project Preview Image -->
            <div class="mb-6 rounded-lg overflow-hidden border transition-colors duration-300" :class="lightMode ? 'border-gray-200' : 'border-gray-700'">
              <div class="h-32 flex items-center justify-center transition-colors duration-300" :class="lightMode ? 'bg-gradient-to-br from-gray-100 to-gray-200' : 'bg-gradient-to-br from-gray-800 to-gray-700'">
                {index === 0 && (
                  <!-- CI/CD Pipeline Diagram -->
                  <div class="flex items-center space-x-2 text-xs">
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-blue-500 flex items-center justify-center text-white text-xs font-bold">CI</div>
                      <div class="text-gray-500 mt-1">Code</div>
                    </div>
                    <div class="text-gray-400">‚Üí</div>
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-green-500 flex items-center justify-center text-white text-xs font-bold">üîß</div>
                      <div class="text-gray-500 mt-1">Build</div>
                    </div>
                    <div class="text-gray-400">‚Üí</div>
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-purple-500 flex items-center justify-center text-white text-xs font-bold">üöÄ</div>
                      <div class="text-gray-500 mt-1">Deploy</div>
                    </div>
                  </div>
                )}
                {index === 1 && (
                  <!-- Serverless Architecture Diagram -->
                  <div class="flex items-center space-x-2 text-xs">
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-orange-500 flex items-center justify-center text-white text-xs font-bold">‚òÅÔ∏è</div>
                      <div class="text-gray-500 mt-1">CDN</div>
                    </div>
                    <div class="text-gray-400">‚Üí</div>
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-blue-500 flex items-center justify-center text-white text-xs font-bold">Œª</div>
                      <div class="text-gray-500 mt-1">Lambda</div>
                    </div>
                    <div class="text-gray-400">‚Üí</div>
                    <div class="flex flex-col items-center">
                      <div class="w-8 h-8 rounded bg-green-500 flex items-center justify-center text-white text-xs font-bold">üóÑÔ∏è</div>
                      <div class="text-gray-500 mt-1">RDS</div>
                    </div>
                  </div>
                )}
                {index === 2 && (
                  <!-- Microservices Architecture -->
                  <div class="grid grid-cols-3 gap-2 text-xs">
                    <div class="w-6 h-6 rounded bg-red-500 flex items-center justify-center text-white font-bold">MS</div>
                    <div class="w-6 h-6 rounded bg-blue-500 flex items-center justify-center text-white font-bold">MS</div>
                    <div class="w-6 h-6 rounded bg-green-500 flex items-center justify-center text-white font-bold">MS</div>
                    <div class="col-span-3 text-center text-gray-500 mt-1">35 Microservices</div>
                  </div>
                )}
              </div>
            </div>

            <div class="flex items-start justify-between mb-4">
              <h3 class="text-xl font-bold group-hover:text-blue-400 transition-colors duration-300" :class="lightMode ? 'text-gray-900' : 'text-white'">
                {project.title}
              </h3>
              <div class="w-12 h-12 rounded-xl flex items-center justify-center transition-colors duration-300" :class="lightMode ? 'bg-blue-100 group-hover:bg-blue-200' : 'bg-blue-500/20 group-hover:bg-blue-500/30'">
                <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
                </svg>
              </div>
            </div>
            
            <p class="mb-6 leading-relaxed text-sm transition-colors duration-300" :class="lightMode ? 'text-gray-600' : 'text-gray-300'">
              {project.description}
            </p>
            
            <div class="flex flex-wrap gap-2 mb-8">
              {project.technologies.map((tech) => {
                const techIcons = {
                  'Jenkins': '/sushant-portfolio/icons/jenkins.png',
                  'Docker': '/sushant-portfolio/icons/docker.png',
                  'Kubernetes': '/sushant-portfolio/icons/kubernetes.png',
                  'Helm': '/sushant-portfolio/icons/helm.png',
                  'Python': '/sushant-portfolio/icons/python.svg',
                  'AWS': '/sushant-portfolio/icons/aws.png',
                  'Lambda': '/sushant-portfolio/icons/aws.png',
                  'S3': '/sushant-portfolio/icons/aws.png',
                  'CloudFront': '/sushant-portfolio/icons/aws.png',
                  'Angular': 'üÖ∞Ô∏è',
                  'Spring Boot': 'üçÉ',
                  'Terraform': '/sushant-portfolio/icons/terraform.png',
                  'AWS EKS': '/sushant-portfolio/icons/kubernetes.png',
                  'EFK Stack': 'üìä'
                };
                return (
                  <span class="backdrop-blur-sm px-3 py-1.5 rounded-full text-xs font-medium border hover:border-blue-500/50 transition-colors duration-300 inline-flex items-center gap-2" :class="lightMode ? 'bg-gray-100/80 text-blue-600 border-gray-300/50' : 'bg-gray-800/80 text-blue-300 border-gray-700/50'">
                    <div class="flex-shrink-0 inline-flex items-center justify-center" style="width: 14px; height: 14px;">
                      {techIcons[tech] && (techIcons[tech].endsWith('.png') || techIcons[tech].endsWith('.svg')) ? (
                        <img src={techIcons[tech]} alt={tech} class="object-contain" style="width: 14px; height: 14px;" />
                      ) : (
                        <span style="font-size: 12px; line-height: 1;">{techIcons[tech] || 'üîß'}</span>
                      )}
                    </div>
                    <span class="whitespace-nowrap">{tech}</span>
                  </span>
                );
              })}
            </div>
            
            <div class="flex items-center justify-between">
              <a 
                href={project.link}
                class="inline-flex items-center px-4 py-2 font-semibold rounded-lg transition-all duration-300 hover:scale-105 border" :class="lightMode ? 'bg-blue-100/50 hover:bg-blue-200/50 text-blue-600 border-blue-300/50 hover:border-blue-500/50' : 'bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 border-blue-500/30 hover:border-blue-400/50'"
              >
                View Details
                <svg class="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
              </a>
              
              <div class="flex items-center space-x-2 transition-colors duration-300" :class="lightMode ? 'text-gray-500' : 'text-gray-500'">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="text-xs">Recent</span>
              </div>
            </div>
          </div>
          
          <!-- Decorative elements -->
          <div class="absolute -top-4 -right-4 w-24 h-24 rounded-full blur-xl group-hover:bg-blue-500/20 transition-colors duration-500" :class="lightMode ? 'bg-blue-200/20' : 'bg-blue-500/10'"></div>
          <div class="absolute -bottom-4 -left-4 w-32 h-32 rounded-full blur-xl group-hover:bg-purple-500/20 transition-colors duration-500" :class="lightMode ? 'bg-purple-200/20' : 'bg-purple-500/10'"></div>
        </div>
      ))}
    </div>
  </div>
</section>